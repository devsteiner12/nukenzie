{"ast":null,"code":"var _jsxFileName = \"/home/diogo/Documentos/projetos/github/nukenzie/src/pages/Dashboard/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { Header } from \"../../components/Header\";\nimport { Form } from \"../../components/Form\";\nimport { List } from \"../../components/List\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Dashboard = _ref => {\n  _s();\n\n  let {\n    checkLogged\n  } = _ref;\n  const [listTransactions, setListTransactions] = useState([]);\n  const [listTransactionsFilter, setListTransactionsFilter] = useState([]);\n  let listForRender = [];\n\n  if (listTransactionsFilter.length) {\n    listForRender = [...listTransactionsFilter];\n  } else {\n    listForRender = [...listTransactions];\n  }\n\n  const transactionsFiltered = idBtn => {\n    if (idBtn != \"all\") {\n      if (idBtn == \"input\") {\n        idBtn = \"Entrada\";\n      } else if (idBtn == \"output\") {\n        idBtn = \"Saída\";\n      }\n\n      const listFiltered = listTransactions.filter(_ref2 => {\n        let {\n          type\n        } = _ref2;\n        return type == idBtn;\n      });\n      setListTransactionsFilter(listFiltered);\n    } else {\n      setListTransactionsFilter([]);\n      setListTransactions(listTransactions);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      checkLogged: checkLogged\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container main__container\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        setListTransactions: setListTransactions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List // rmvTransaction={rmvTransaction}\n      , {\n        listForRender: listForRender,\n        transactionsFiltered: transactionsFiltered\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}; // listForRender={listForRender}\n\n_s(Dashboard, \"l42nVRSSCQ+nlE2CqWhi7v4kmqQ=\");\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["Header","Form","List","useState","Dashboard","checkLogged","listTransactions","setListTransactions","listTransactionsFilter","setListTransactionsFilter","listForRender","length","transactionsFiltered","idBtn","listFiltered","filter","type"],"sources":["/home/diogo/Documentos/projetos/github/nukenzie/src/pages/Dashboard/index.jsx"],"sourcesContent":["import { Header } from \"../../components/Header\";\nimport { Form } from \"../../components/Form\";\nimport { List } from \"../../components/List\";\nimport { useState } from \"react\";\n\nexport const Dashboard = ({ checkLogged }) => {\n  const [listTransactions, setListTransactions] = useState([]);\n  const [listTransactionsFilter, setListTransactionsFilter] = useState([]);\n  let listForRender = [];\n\n  if (listTransactionsFilter.length) {\n    listForRender = [...listTransactionsFilter];\n  } else {\n    listForRender = [...listTransactions];\n  }\n\n  const transactionsFiltered = (idBtn) => {\n    if (idBtn != \"all\") {\n      if (idBtn == \"input\") {\n        idBtn = \"Entrada\";\n      } else if (idBtn == \"output\") {\n        idBtn = \"Saída\";\n      }\n      const listFiltered = listTransactions.filter(({ type }) => type == idBtn);\n      setListTransactionsFilter(listFiltered);\n    } else {\n      setListTransactionsFilter([]);\n      setListTransactions(listTransactions);\n    }\n  };\n\n  return (\n    <>\n      <Header checkLogged={checkLogged} />\n      <main className=\"container main__container\">\n        <Form setListTransactions={setListTransactions} />\n        <List\n          // rmvTransaction={rmvTransaction}\n          listForRender={listForRender}\n          transactionsFiltered={transactionsFiltered}\n        />\n      </main>\n    </>\n  );\n};\n\n// listForRender={listForRender}\n"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,yBAAvB;AACA,SAASC,IAAT,QAAqB,uBAArB;AACA,SAASC,IAAT,QAAqB,uBAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,OAAO,MAAMC,SAAS,GAAG,QAAqB;EAAA;;EAAA,IAApB;IAAEC;EAAF,CAAoB;EAC5C,MAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CJ,QAAQ,CAAC,EAAD,CAAxD;EACA,MAAM,CAACK,sBAAD,EAAyBC,yBAAzB,IAAsDN,QAAQ,CAAC,EAAD,CAApE;EACA,IAAIO,aAAa,GAAG,EAApB;;EAEA,IAAIF,sBAAsB,CAACG,MAA3B,EAAmC;IACjCD,aAAa,GAAG,CAAC,GAAGF,sBAAJ,CAAhB;EACD,CAFD,MAEO;IACLE,aAAa,GAAG,CAAC,GAAGJ,gBAAJ,CAAhB;EACD;;EAED,MAAMM,oBAAoB,GAAIC,KAAD,IAAW;IACtC,IAAIA,KAAK,IAAI,KAAb,EAAoB;MAClB,IAAIA,KAAK,IAAI,OAAb,EAAsB;QACpBA,KAAK,GAAG,SAAR;MACD,CAFD,MAEO,IAAIA,KAAK,IAAI,QAAb,EAAuB;QAC5BA,KAAK,GAAG,OAAR;MACD;;MACD,MAAMC,YAAY,GAAGR,gBAAgB,CAACS,MAAjB,CAAwB;QAAA,IAAC;UAAEC;QAAF,CAAD;QAAA,OAAcA,IAAI,IAAIH,KAAtB;MAAA,CAAxB,CAArB;MACAJ,yBAAyB,CAACK,YAAD,CAAzB;IACD,CARD,MAQO;MACLL,yBAAyB,CAAC,EAAD,CAAzB;MACAF,mBAAmB,CAACD,gBAAD,CAAnB;IACD;EACF,CAbD;;EAeA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAQ,WAAW,EAAED;IAArB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAM,SAAS,EAAC,2BAAhB;MAAA,wBACE,QAAC,IAAD;QAAM,mBAAmB,EAAEE;MAA3B;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,IAAD,CACE;MADF;QAEE,aAAa,EAAEG,aAFjB;QAGE,oBAAoB,EAAEE;MAHxB;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAaD,CAvCM,C,CAyCP;;GAzCaR,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}