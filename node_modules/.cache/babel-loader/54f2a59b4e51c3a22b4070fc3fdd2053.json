{"ast":null,"code":"var _jsxFileName = \"/home/diogosteiner/\\xC1rea de Trabalho/nukenzie/src/contexts/TransactionsContext.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from \"react\";\nimport { Global } from \"../utils/global\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionsContext = /*#__PURE__*/createContext({});\nexport const TransactionsProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [listTransactions, setListTransactions] = useState([]);\n  const [filteredTransactions, setFilteredTransaction] = useState([]);\n\n  const createTransaction = _ref2 => {\n    let {\n      description,\n      type,\n      value\n    } = _ref2;\n\n    if (description.trim() != \"\") {\n      const transaction = {\n        description: description,\n        type: type,\n        value: value\n      };\n      const newListTransactions = Global.handleGeneratorIds([...listTransactions, transaction]);\n      setListTransactions(newListTransactions);\n    }\n  };\n\n  const delTransaction = selectedTransaction => {\n    const newListTransactions = listTransactions.filter(_ref3 => {\n      let {\n        id\n      } = _ref3;\n      return id != selectedTransaction.id;\n    });\n    setListTransactions(newListTransactions);\n  };\n\n  const filterTransactions = stype => {\n    if (!(stype == \"all\")) {\n      const listFiltered = listTransactions.filter(_ref4 => {\n        let {\n          type\n        } = _ref4;\n        return type == stype;\n      });\n      console.log(listFiltered);\n      setFilteredTransaction(listFiltered);\n    } else {\n      setFilteredTransaction([]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(TransactionsContext.Provider, {\n    value: {\n      listTransactions,\n      createTransaction,\n      delTransaction,\n      filterTransactions,\n      filteredTransactions\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TransactionsProvider, \"TjJtByAh+LVfk4tGNjaEnovtDz8=\");\n\n_c = TransactionsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsProvider\");","map":{"version":3,"names":["React","createContext","useState","Global","TransactionsContext","TransactionsProvider","children","listTransactions","setListTransactions","filteredTransactions","setFilteredTransaction","createTransaction","description","type","value","trim","transaction","newListTransactions","handleGeneratorIds","delTransaction","selectedTransaction","filter","id","filterTransactions","stype","listFiltered","console","log"],"sources":["/home/diogosteiner/Área de Trabalho/nukenzie/src/contexts/TransactionsContext.tsx"],"sourcesContent":["import { type } from \"os\";\nimport React, { createContext, useState } from \"react\";\nimport { Global } from \"../utils/global\";\n\nexport interface iTransaction {\n  id?: number;\n  description: string;\n  type: string;\n  value: string;\n}\n\ninterface iTransactionsProviderProps {\n  children: React.ReactNode;\n}\n\ninterface iTransactionProvider {\n  createTransaction: ({ description, type, value }: iTransaction) => void;\n  listTransactions: iTransaction[];\n  delTransaction: (selectedTransaction: iTransaction) => void;\n  filterTransactions: (stype: string) => void;\n  filteredTransactions: iTransaction[];\n}\n\nexport const TransactionsContext = createContext({} as iTransactionProvider);\n\nexport const TransactionsProvider = ({\n  children,\n}: iTransactionsProviderProps) => {\n  const [listTransactions, setListTransactions] = useState<[] | iTransaction[]>(\n    []\n  );\n  const [filteredTransactions, setFilteredTransaction] = useState<\n    [] | iTransaction[]\n  >([]);\n\n  const createTransaction = ({\n    description,\n    type,\n    value,\n  }: iTransaction): void => {\n    if (description.trim() != \"\") {\n      const transaction = {\n        description: description,\n        type: type,\n        value: value,\n      };\n      const newListTransactions = Global.handleGeneratorIds([\n        ...listTransactions,\n        transaction,\n      ]);\n      setListTransactions(newListTransactions);\n    }\n  };\n\n  const delTransaction = (selectedTransaction: iTransaction) => {\n    const newListTransactions = listTransactions.filter(\n      ({ id }) => id != selectedTransaction.id\n    );\n    setListTransactions(newListTransactions);\n  };\n\n  const filterTransactions = (stype: string) => {\n    if (!(stype == \"all\")) {\n      const listFiltered = listTransactions.filter(({ type }) => type == stype);\n      console.log(listFiltered);\n\n      setFilteredTransaction(listFiltered);\n    } else {\n      setFilteredTransaction([]);\n    }\n  };\n\n  return (\n    <TransactionsContext.Provider\n      value={{\n        listTransactions,\n        createTransaction,\n        delTransaction,\n        filterTransactions,\n        filteredTransactions,\n      }}\n    >\n      {children}\n    </TransactionsContext.Provider>\n  );\n};\n"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,SAASC,MAAT,QAAuB,iBAAvB;;AAqBA,OAAO,MAAMC,mBAAmB,gBAAGH,aAAa,CAAC,EAAD,CAAzC;AAEP,OAAO,MAAMI,oBAAoB,GAAG,QAEF;EAAA;;EAAA,IAFG;IACnCC;EADmC,CAEH;EAChC,MAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CN,QAAQ,CACtD,EADsD,CAAxD;EAGA,MAAM,CAACO,oBAAD,EAAuBC,sBAAvB,IAAiDR,QAAQ,CAE7D,EAF6D,CAA/D;;EAIA,MAAMS,iBAAiB,GAAG,SAIA;IAAA,IAJC;MACzBC,WADyB;MAEzBC,IAFyB;MAGzBC;IAHyB,CAID;;IACxB,IAAIF,WAAW,CAACG,IAAZ,MAAsB,EAA1B,EAA8B;MAC5B,MAAMC,WAAW,GAAG;QAClBJ,WAAW,EAAEA,WADK;QAElBC,IAAI,EAAEA,IAFY;QAGlBC,KAAK,EAAEA;MAHW,CAApB;MAKA,MAAMG,mBAAmB,GAAGd,MAAM,CAACe,kBAAP,CAA0B,CACpD,GAAGX,gBADiD,EAEpDS,WAFoD,CAA1B,CAA5B;MAIAR,mBAAmB,CAACS,mBAAD,CAAnB;IACD;EACF,CAjBD;;EAmBA,MAAME,cAAc,GAAIC,mBAAD,IAAuC;IAC5D,MAAMH,mBAAmB,GAAGV,gBAAgB,CAACc,MAAjB,CAC1B;MAAA,IAAC;QAAEC;MAAF,CAAD;MAAA,OAAYA,EAAE,IAAIF,mBAAmB,CAACE,EAAtC;IAAA,CAD0B,CAA5B;IAGAd,mBAAmB,CAACS,mBAAD,CAAnB;EACD,CALD;;EAOA,MAAMM,kBAAkB,GAAIC,KAAD,IAAmB;IAC5C,IAAI,EAAEA,KAAK,IAAI,KAAX,CAAJ,EAAuB;MACrB,MAAMC,YAAY,GAAGlB,gBAAgB,CAACc,MAAjB,CAAwB;QAAA,IAAC;UAAER;QAAF,CAAD;QAAA,OAAcA,IAAI,IAAIW,KAAtB;MAAA,CAAxB,CAArB;MACAE,OAAO,CAACC,GAAR,CAAYF,YAAZ;MAEAf,sBAAsB,CAACe,YAAD,CAAtB;IACD,CALD,MAKO;MACLf,sBAAsB,CAAC,EAAD,CAAtB;IACD;EACF,CATD;;EAWA,oBACE,QAAC,mBAAD,CAAqB,QAArB;IACE,KAAK,EAAE;MACLH,gBADK;MAELI,iBAFK;MAGLQ,cAHK;MAILI,kBAJK;MAKLd;IALK,CADT;IAAA,UASGH;EATH;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CA5DM;;GAAMD,oB;;KAAAA,oB"},"metadata":{},"sourceType":"module"}