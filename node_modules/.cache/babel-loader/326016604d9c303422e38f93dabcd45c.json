{"ast":null,"code":"var _jsxFileName = \"/home/diogosteiner/Documentos/kenzie/m3/entregas/react-entrega-s1-nu-kenzie-diogo-steiner/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Form } from \"./components/Form\";\nimport { Header } from \"./components/Header\";\nimport { LandPage } from \"./components/LandPage\";\nimport { List } from \"./components/List\";\nimport { Global } from \"./Models/Global/Global\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet listTransactionsOrig = [];\n\nconst App = () => {\n  _s();\n\n  const [listTransactions, setListTransactions] = useState([]);\n  const [listTransactionsFilter, setListTransactionsFilter] = useState([]);\n  const [isLogged, setIsLogged] = useState(false);\n\n  const checkLogged = () => {\n    setIsLogged(!isLogged);\n  };\n\n  const addTransactions = transaction => {\n    // listTransactionsOrig = [...listTransactionsOrig, transaction];\n    // setListTransactions(listTransactionsOrig);\n    const arrTransactions = Global.handleIds(listTransactions);\n    setListTransactions([...arrTransactions, transaction]);\n  };\n\n  const rmvTransaction = idTransaction => {\n    const newArrTransactions = listTransactions.filter(_ref => {\n      let {\n        id\n      } = _ref;\n      return id != idTransaction;\n    }); // const arrTransactionsFilter = listTransactions.filter(\n    //   ({ id }) => id != idTransaction\n    // );\n    // listTransactionsOrig = [...arrTransactionsFilterOri];\n\n    setListTransactions(newArrTransactions);\n  };\n\n  const filterTransactions = tp => {\n    console.log(tp);\n\n    if (tp == \"all\") {\n      setListTransactions(listTransactions);\n    } else {\n      const arrFilter = listTransactions.filter(_ref2 => {\n        let {\n          type\n        } = _ref2;\n        return tp == type;\n      });\n      setListTransactionsFilter(arrFilter);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLogged ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        checkLogged: checkLogged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"container main__container\",\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          addTransactions: addTransactions,\n          listTransactions: listTransactions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          listTransactions: listTransactions,\n          listTransactionsFilter: listTransactionsFilter,\n          rmvTransaction: rmvTransaction,\n          filterTransactions: filterTransactions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(LandPage, {\n      checkLogged: checkLogged\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"Y2DAOK4ppK35F8yRRT16ik8YpcQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Form","Header","LandPage","List","Global","listTransactionsOrig","App","listTransactions","setListTransactions","listTransactionsFilter","setListTransactionsFilter","isLogged","setIsLogged","checkLogged","addTransactions","transaction","arrTransactions","handleIds","rmvTransaction","idTransaction","newArrTransactions","filter","id","filterTransactions","tp","console","log","arrFilter","type"],"sources":["/home/diogosteiner/Documentos/kenzie/m3/entregas/react-entrega-s1-nu-kenzie-diogo-steiner/src/App.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { Form } from \"./components/Form\";\nimport { Header } from \"./components/Header\";\nimport { LandPage } from \"./components/LandPage\";\nimport { List } from \"./components/List\";\nimport { Global } from \"./Models/Global/Global\";\n\nlet listTransactionsOrig = [];\n\nconst App = () => {\n  const [listTransactions, setListTransactions] = useState([]);\n  const [listTransactionsFilter, setListTransactionsFilter] = useState([]);\n  const [isLogged, setIsLogged] = useState(false);\n\n  const checkLogged = () => {\n    setIsLogged(!isLogged);\n  };\n\n  const addTransactions = (transaction) => {\n    // listTransactionsOrig = [...listTransactionsOrig, transaction];\n    // setListTransactions(listTransactionsOrig);\n    const arrTransactions = Global.handleIds(listTransactions);\n    setListTransactions([...arrTransactions, transaction]);\n  };\n\n  const rmvTransaction = (idTransaction) => {\n    const newArrTransactions = listTransactions.filter(\n      ({ id }) => id != idTransaction\n    );\n\n    // const arrTransactionsFilter = listTransactions.filter(\n    //   ({ id }) => id != idTransaction\n    // );\n    // listTransactionsOrig = [...arrTransactionsFilterOri];\n\n    setListTransactions(newArrTransactions);\n  };\n\n  const filterTransactions = (tp) => {\n    console.log(tp);\n    if (tp == \"all\") {\n      setListTransactions(listTransactions);\n    } else {\n      const arrFilter = listTransactions.filter(({ type }) => tp == type);\n\n      setListTransactionsFilter(arrFilter);\n    }\n  };\n\n  return (\n    <>\n      {isLogged ? (\n        <>\n          <Header checkLogged={checkLogged} />\n          <main className=\"container main__container\">\n            <Form\n              addTransactions={addTransactions}\n              listTransactions={listTransactions}\n            />\n            <List\n              listTransactions={listTransactions}\n              listTransactionsFilter={listTransactionsFilter}\n              rmvTransaction={rmvTransaction}\n              filterTransactions={filterTransactions}\n            />\n          </main>\n        </>\n      ) : (\n        <LandPage checkLogged={checkLogged} />\n      )}\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,MAAT,QAAuB,wBAAvB;;;AAEA,IAAIC,oBAAoB,GAAG,EAA3B;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CT,QAAQ,CAAC,EAAD,CAAxD;EACA,MAAM,CAACU,sBAAD,EAAyBC,yBAAzB,IAAsDX,QAAQ,CAAC,EAAD,CAApE;EACA,MAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;;EAEA,MAAMc,WAAW,GAAG,MAAM;IACxBD,WAAW,CAAC,CAACD,QAAF,CAAX;EACD,CAFD;;EAIA,MAAMG,eAAe,GAAIC,WAAD,IAAiB;IACvC;IACA;IACA,MAAMC,eAAe,GAAGZ,MAAM,CAACa,SAAP,CAAiBV,gBAAjB,CAAxB;IACAC,mBAAmB,CAAC,CAAC,GAAGQ,eAAJ,EAAqBD,WAArB,CAAD,CAAnB;EACD,CALD;;EAOA,MAAMG,cAAc,GAAIC,aAAD,IAAmB;IACxC,MAAMC,kBAAkB,GAAGb,gBAAgB,CAACc,MAAjB,CACzB;MAAA,IAAC;QAAEC;MAAF,CAAD;MAAA,OAAYA,EAAE,IAAIH,aAAlB;IAAA,CADyB,CAA3B,CADwC,CAKxC;IACA;IACA;IACA;;IAEAX,mBAAmB,CAACY,kBAAD,CAAnB;EACD,CAXD;;EAaA,MAAMG,kBAAkB,GAAIC,EAAD,IAAQ;IACjCC,OAAO,CAACC,GAAR,CAAYF,EAAZ;;IACA,IAAIA,EAAE,IAAI,KAAV,EAAiB;MACfhB,mBAAmB,CAACD,gBAAD,CAAnB;IACD,CAFD,MAEO;MACL,MAAMoB,SAAS,GAAGpB,gBAAgB,CAACc,MAAjB,CAAwB;QAAA,IAAC;UAAEO;QAAF,CAAD;QAAA,OAAcJ,EAAE,IAAII,IAApB;MAAA,CAAxB,CAAlB;MAEAlB,yBAAyB,CAACiB,SAAD,CAAzB;IACD;EACF,CATD;;EAWA,oBACE;IAAA,UACGhB,QAAQ,gBACP;MAAA,wBACE,QAAC,MAAD;QAAQ,WAAW,EAAEE;MAArB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAM,SAAS,EAAC,2BAAhB;QAAA,wBACE,QAAC,IAAD;UACE,eAAe,EAAEC,eADnB;UAEE,gBAAgB,EAAEP;QAFpB;UAAA;UAAA;UAAA;QAAA,QADF,eAKE,QAAC,IAAD;UACE,gBAAgB,EAAEA,gBADpB;UAEE,sBAAsB,EAAEE,sBAF1B;UAGE,cAAc,EAAES,cAHlB;UAIE,kBAAkB,EAAEK;QAJtB;UAAA;UAAA;UAAA;QAAA,QALF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA,gBADO,gBAiBP,QAAC,QAAD;MAAU,WAAW,EAAEV;IAAvB;MAAA;MAAA;MAAA;IAAA;EAlBJ,iBADF;AAuBD,CA/DD;;GAAMP,G;;KAAAA,G;AAiEN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}