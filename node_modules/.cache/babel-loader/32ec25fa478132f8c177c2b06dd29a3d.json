{"ast":null,"code":"var _jsxFileName = \"/home/diogo/Documentos/projetos/github/nukenzie/src/pages/Dashboard/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { Header } from \"../../components/Header\";\nimport { Form } from \"../../components/Form\";\nimport { List } from \"../../components/List\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Dashboard = _ref => {\n  _s();\n\n  let {\n    checkLogged\n  } = _ref;\n  const [listTransactions, setListTransactions] = useState([]);\n  const [listTransactionsFilter, setListTransactionsFilter] = useState([]);\n\n  const transactionsFiltered = idBtn => {\n    if (idBtn == \"input\") {\n      idBtn = \"Entrada\";\n    } else if (idBtn == \"output\") {\n      idBtn = \"Saída\";\n    }\n\n    const listFiltered = listTransactions.filter(_ref2 => {\n      let {\n        type\n      } = _ref2;\n      return type == idBtn;\n    });\n    setListTransactionsFilter(listFiltered);\n  };\n\n  /*#__PURE__*/\n  _jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      checkLogged: checkLogged\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container main__container\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        setListTransactions: setListTransactions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        listForRender: listForRender,\n        rmvTransaction: rmvTransaction,\n        transactionsFiltered: transactionsFiltered\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}; // listForRender={listForRender}\n\n_s(Dashboard, \"l42nVRSSCQ+nlE2CqWhi7v4kmqQ=\");\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["Header","Form","List","useState","Dashboard","checkLogged","listTransactions","setListTransactions","listTransactionsFilter","setListTransactionsFilter","transactionsFiltered","idBtn","listFiltered","filter","type","listForRender","rmvTransaction"],"sources":["/home/diogo/Documentos/projetos/github/nukenzie/src/pages/Dashboard/index.jsx"],"sourcesContent":["import { Header } from \"../../components/Header\";\nimport { Form } from \"../../components/Form\";\nimport { List } from \"../../components/List\";\nimport { useState } from \"react\";\n\nexport const Dashboard = ({ checkLogged }) => {\n  const [listTransactions, setListTransactions] = useState([]);\n  const [listTransactionsFilter, setListTransactionsFilter] = useState([]);\n\n  const transactionsFiltered = (idBtn) => {\n    if (idBtn == \"input\") {\n      idBtn = \"Entrada\";\n    } else if (idBtn == \"output\") {\n      idBtn = \"Saída\";\n    }\n    const listFiltered = listTransactions.filter(({ type }) => type == idBtn);\n    setListTransactionsFilter(listFiltered);\n  };\n  <>\n    <Header checkLogged={checkLogged} />\n    <main className=\"container main__container\">\n      <Form setListTransactions={setListTransactions} />\n      <List\n        listForRender={listForRender}\n        rmvTransaction={rmvTransaction}\n        transactionsFiltered={transactionsFiltered}\n      />\n    </main>\n  </>;\n};\n\n// listForRender={listForRender}\n"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,yBAAvB;AACA,SAASC,IAAT,QAAqB,uBAArB;AACA,SAASC,IAAT,QAAqB,uBAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,OAAO,MAAMC,SAAS,GAAG,QAAqB;EAAA;;EAAA,IAApB;IAAEC;EAAF,CAAoB;EAC5C,MAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CJ,QAAQ,CAAC,EAAD,CAAxD;EACA,MAAM,CAACK,sBAAD,EAAyBC,yBAAzB,IAAsDN,QAAQ,CAAC,EAAD,CAApE;;EAEA,MAAMO,oBAAoB,GAAIC,KAAD,IAAW;IACtC,IAAIA,KAAK,IAAI,OAAb,EAAsB;MACpBA,KAAK,GAAG,SAAR;IACD,CAFD,MAEO,IAAIA,KAAK,IAAI,QAAb,EAAuB;MAC5BA,KAAK,GAAG,OAAR;IACD;;IACD,MAAMC,YAAY,GAAGN,gBAAgB,CAACO,MAAjB,CAAwB;MAAA,IAAC;QAAEC;MAAF,CAAD;MAAA,OAAcA,IAAI,IAAIH,KAAtB;IAAA,CAAxB,CAArB;IACAF,yBAAyB,CAACG,YAAD,CAAzB;EACD,CARD;;EASA;EAAA;IAAA,wBACE,QAAC,MAAD;MAAQ,WAAW,EAAEP;IAArB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAM,SAAS,EAAC,2BAAhB;MAAA,wBACE,QAAC,IAAD;QAAM,mBAAmB,EAAEE;MAA3B;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,IAAD;QACE,aAAa,EAAEQ,aADjB;QAEE,cAAc,EAAEC,cAFlB;QAGE,oBAAoB,EAAEN;MAHxB;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;AAWD,CAxBM,C,CA0BP;;GA1BaN,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}