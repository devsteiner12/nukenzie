{"ast":null,"code":"var _jsxFileName = \"/home/diogo/Documentos/projetos/github/nukenzie/src/pages/Dashboard/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { Header } from \"../../components/Header\";\nimport { Form } from \"../../components/Form\";\nimport { List } from \"../../components/List\";\nimport { useState } from \"react\";\nimport { Global } from \"../../Models/Global/Global\"; // let listForRender = [];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Dashboard = _ref => {\n  _s();\n\n  let {\n    checkLogged\n  } = _ref;\n  const [listTransactions, setListTransactions] = useState([]);\n  const [listTransactionsFilter, setListTransactionsFilter] = useState([]);\n  const [isFilter, setIsfilter] = useState(false);\n  console.log(isFilter);\n\n  const addTransactions = transaction => {\n    const arrTransactions = Global.handleIds([...listTransactions, transaction]);\n    setIsfilter(false);\n    setListTransactions(arrTransactions);\n  };\n\n  const transactionsFiltered = idBtn => {\n    if (idBtn != \"all\") {\n      if (idBtn == \"input\") {\n        idBtn = \"Entrada\";\n      } else if (idBtn == \"output\") {\n        idBtn = \"Saída\";\n      }\n\n      setIsfilter(true);\n      const listFiltered = listTransactions.filter(_ref2 => {\n        let {\n          type\n        } = _ref2;\n        return type == idBtn;\n      });\n      setListTransactionsFilter(listFiltered);\n    } else {\n      setIsfilter(false);\n      setListTransactions(arrList => {\n        return arrList;\n      });\n    }\n  }; // const transactionsFiltered = (idBtn) => {\n  //   if (idBtn != \"all\") {\n  //     if (idBtn == \"input\") {\n  //       idBtn = \"Entrada\";\n  //     } else if (idBtn == \"output\") {\n  //       idBtn = \"Saída\";\n  //     }\n  //     const listFiltered = listTransactions.filter(({ type }) => type == idBtn);\n  //     setListTransactionsFilter(listFiltered);\n  //     listForRender = [...listTransactionsFilter];\n  //   } else {\n  //     setListTransactionsFilter([]);\n  //     setListTransactions(listTransactions);\n  //     listForRender = [...listTransactions];\n  //   }\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      checkLogged: checkLogged\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container main__container\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        addTransactions: addTransactions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List // rmvTransaction={rmvTransaction}\n      // listForRender={listForRender}\n      , {\n        transactionsFiltered: true,\n        setIsfilter: setIsfilter,\n        arrList: isFilter ? listTransactionsFilter : listTransactions,\n        setListTransactions: setListTransactions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}; // listForRender={listForRender}\n\n_s(Dashboard, \"jH+SGHnmKLsxxhfnos0J5K5RBV8=\");\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["Header","Form","List","useState","Global","Dashboard","checkLogged","listTransactions","setListTransactions","listTransactionsFilter","setListTransactionsFilter","isFilter","setIsfilter","console","log","addTransactions","transaction","arrTransactions","handleIds","transactionsFiltered","idBtn","listFiltered","filter","type","arrList"],"sources":["/home/diogo/Documentos/projetos/github/nukenzie/src/pages/Dashboard/index.jsx"],"sourcesContent":["import { Header } from \"../../components/Header\";\nimport { Form } from \"../../components/Form\";\nimport { List } from \"../../components/List\";\nimport { useState } from \"react\";\nimport { Global } from \"../../Models/Global/Global\";\n\n// let listForRender = [];\nexport const Dashboard = ({ checkLogged }) => {\n  const [listTransactions, setListTransactions] = useState([]);\n  const [listTransactionsFilter, setListTransactionsFilter] = useState([]);\n  const [isFilter, setIsfilter] = useState(false);\n\n  console.log(isFilter);\n\n  const addTransactions = (transaction) => {\n    const arrTransactions = Global.handleIds([\n      ...listTransactions,\n      transaction,\n    ]);\n    setIsfilter(false);\n    setListTransactions(arrTransactions);\n  };\n\n  const transactionsFiltered = (idBtn) => {\n    if (idBtn != \"all\") {\n      if (idBtn == \"input\") {\n        idBtn = \"Entrada\";\n      } else if (idBtn == \"output\") {\n        idBtn = \"Saída\";\n      }\n      setIsfilter(true);\n      const listFiltered = listTransactions.filter(({ type }) => type == idBtn);\n      setListTransactionsFilter(listFiltered);\n    } else {\n      setIsfilter(false);\n      setListTransactions((arrList) => {\n        return arrList;\n      });\n    }\n  };\n\n  // const transactionsFiltered = (idBtn) => {\n  //   if (idBtn != \"all\") {\n  //     if (idBtn == \"input\") {\n  //       idBtn = \"Entrada\";\n  //     } else if (idBtn == \"output\") {\n  //       idBtn = \"Saída\";\n  //     }\n  //     const listFiltered = listTransactions.filter(({ type }) => type == idBtn);\n  //     setListTransactionsFilter(listFiltered);\n  //     listForRender = [...listTransactionsFilter];\n  //   } else {\n  //     setListTransactionsFilter([]);\n  //     setListTransactions(listTransactions);\n  //     listForRender = [...listTransactions];\n  //   }\n  // };\n\n  return (\n    <>\n      <Header checkLogged={checkLogged} />\n      <main className=\"container main__container\">\n        <Form addTransactions={addTransactions} />\n        <List\n          // rmvTransaction={rmvTransaction}\n          // listForRender={listForRender}\n          transactionsFiltered\n          setIsfilter={setIsfilter}\n          arrList={isFilter ? listTransactionsFilter : listTransactions}\n          setListTransactions={setListTransactions}\n        />\n      </main>\n    </>\n  );\n};\n\n// listForRender={listForRender}\n"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,yBAAvB;AACA,SAASC,IAAT,QAAqB,uBAArB;AACA,SAASC,IAAT,QAAqB,uBAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,4BAAvB,C,CAEA;;;;AACA,OAAO,MAAMC,SAAS,GAAG,QAAqB;EAAA;;EAAA,IAApB;IAAEC;EAAF,CAAoB;EAC5C,MAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CL,QAAQ,CAAC,EAAD,CAAxD;EACA,MAAM,CAACM,sBAAD,EAAyBC,yBAAzB,IAAsDP,QAAQ,CAAC,EAAD,CAApE;EACA,MAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,KAAD,CAAxC;EAEAU,OAAO,CAACC,GAAR,CAAYH,QAAZ;;EAEA,MAAMI,eAAe,GAAIC,WAAD,IAAiB;IACvC,MAAMC,eAAe,GAAGb,MAAM,CAACc,SAAP,CAAiB,CACvC,GAAGX,gBADoC,EAEvCS,WAFuC,CAAjB,CAAxB;IAIAJ,WAAW,CAAC,KAAD,CAAX;IACAJ,mBAAmB,CAACS,eAAD,CAAnB;EACD,CAPD;;EASA,MAAME,oBAAoB,GAAIC,KAAD,IAAW;IACtC,IAAIA,KAAK,IAAI,KAAb,EAAoB;MAClB,IAAIA,KAAK,IAAI,OAAb,EAAsB;QACpBA,KAAK,GAAG,SAAR;MACD,CAFD,MAEO,IAAIA,KAAK,IAAI,QAAb,EAAuB;QAC5BA,KAAK,GAAG,OAAR;MACD;;MACDR,WAAW,CAAC,IAAD,CAAX;MACA,MAAMS,YAAY,GAAGd,gBAAgB,CAACe,MAAjB,CAAwB;QAAA,IAAC;UAAEC;QAAF,CAAD;QAAA,OAAcA,IAAI,IAAIH,KAAtB;MAAA,CAAxB,CAArB;MACAV,yBAAyB,CAACW,YAAD,CAAzB;IACD,CATD,MASO;MACLT,WAAW,CAAC,KAAD,CAAX;MACAJ,mBAAmB,CAAEgB,OAAD,IAAa;QAC/B,OAAOA,OAAP;MACD,CAFkB,CAAnB;IAGD;EACF,CAhBD,CAhB4C,CAkC5C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAQ,WAAW,EAAElB;IAArB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAM,SAAS,EAAC,2BAAhB;MAAA,wBACE,QAAC,IAAD;QAAM,eAAe,EAAES;MAAvB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,IAAD,CACE;MACA;MAFF;QAGE,oBAAoB,MAHtB;QAIE,WAAW,EAAEH,WAJf;QAKE,OAAO,EAAED,QAAQ,GAAGF,sBAAH,GAA4BF,gBAL/C;QAME,mBAAmB,EAAEC;MANvB;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAgBD,CAnEM,C,CAqEP;;GArEaH,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}