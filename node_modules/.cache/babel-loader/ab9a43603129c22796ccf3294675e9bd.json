{"ast":null,"code":"var _jsxFileName = \"/home/diogosteiner/\\xC1rea de Trabalho/nukenzie/src/pages/Dashboard/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Header } from \"../../components/Header\";\nimport { Form } from \"../../components/Form\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Dashboard = () => {\n  _s();\n\n  const [listTransactions, setListTransactions] = useState([]);\n  const [listTransactionsFilter, setListTransactionsFilter] = useState([]);\n  const [isFilter, setIsfilter] = useState(false); // const addTransactions = (transaction) => {\n  //   const arrTransactions = Global.handleIds([\n  //     ...listTransactions,\n  //     transaction,\n  //   ]);\n  //   setIsfilter(false);\n  //   setListTransactions(arrTransactions);\n  // };\n  // const rmvTransaction = (idTransaction) => {\n  //   const newListTransactions = listTransactions.filter(\n  //     ({ id }) => id != idTransaction\n  //   );\n  //   setIsfilter(false);\n  //   setListTransactions(newListTransactions);\n  // };\n  // const transactionsFiltered = (idBtn) => {\n  //   if (idBtn != \"all\") {\n  //     if (idBtn == \"input\") {\n  //       idBtn = \"Entrada\";\n  //     } else if (idBtn == \"output\") {\n  //       idBtn = \"Saída\";\n  //     }\n  //     setIsfilter(true);\n  //     const listFiltered = listTransactions.filter(({ type }) => type == idBtn);\n  //     setListTransactionsFilter(listFiltered);\n  //   } else {\n  //     setIsfilter(false);\n  //     setListTransactions((arrList) => {\n  //       return arrList;\n  //     });\n  //   }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container main__container\",\n      children: /*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Dashboard, \"jH+SGHnmKLsxxhfnos0J5K5RBV8=\");\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["Header","Form","useState","Dashboard","listTransactions","setListTransactions","listTransactionsFilter","setListTransactionsFilter","isFilter","setIsfilter"],"sources":["/home/diogosteiner/Área de Trabalho/nukenzie/src/pages/Dashboard/index.tsx"],"sourcesContent":["import { Header } from \"../../components/Header\";\nimport { Form } from \"../../components/Form\";\nimport { List } from \"../../components/List\";\nimport { useState } from \"react\";\nimport { Global } from \"../../utils/Global\";\n\nexport const Dashboard = () => {\n  const [listTransactions, setListTransactions] = useState([]);\n  const [listTransactionsFilter, setListTransactionsFilter] = useState([]);\n  const [isFilter, setIsfilter] = useState(false);\n\n  // const addTransactions = (transaction) => {\n  //   const arrTransactions = Global.handleIds([\n  //     ...listTransactions,\n  //     transaction,\n  //   ]);\n  //   setIsfilter(false);\n  //   setListTransactions(arrTransactions);\n  // };\n\n  // const rmvTransaction = (idTransaction) => {\n  //   const newListTransactions = listTransactions.filter(\n  //     ({ id }) => id != idTransaction\n  //   );\n  //   setIsfilter(false);\n  //   setListTransactions(newListTransactions);\n  // };\n\n  // const transactionsFiltered = (idBtn) => {\n  //   if (idBtn != \"all\") {\n  //     if (idBtn == \"input\") {\n  //       idBtn = \"Entrada\";\n  //     } else if (idBtn == \"output\") {\n  //       idBtn = \"Saída\";\n  //     }\n  //     setIsfilter(true);\n  //     const listFiltered = listTransactions.filter(({ type }) => type == idBtn);\n  //     setListTransactionsFilter(listFiltered);\n  //   } else {\n  //     setIsfilter(false);\n  //     setListTransactions((arrList) => {\n  //       return arrList;\n  //     });\n  //   }\n  // };\n\n  return (\n    <>\n      <Header />\n      <main className=\"container main__container\">\n        <Form />\n        {/* <List\n          arrList={isFilter ? listTransactionsFilter : listTransactions}\n          transactionsFiltered={transactionsFiltered}\n          rmvTransaction={rmvTransaction}\n          isFilter={isFilter}\n        /> */}\n      </main>\n    </>\n  );\n};\n"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,yBAAvB;AACA,SAASC,IAAT,QAAqB,uBAArB;AAEA,SAASC,QAAT,QAAyB,OAAzB;;;AAGA,OAAO,MAAMC,SAAS,GAAG,MAAM;EAAA;;EAC7B,MAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CH,QAAQ,CAAC,EAAD,CAAxD;EACA,MAAM,CAACI,sBAAD,EAAyBC,yBAAzB,IAAsDL,QAAQ,CAAC,EAAD,CAApE;EACA,MAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC,CAH6B,CAK7B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAM,SAAS,EAAC,2BAAhB;MAAA,uBACE,QAAC,IAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAcD,CAtDM;;GAAMC,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}