{"ast":null,"code":"var _jsxFileName = \"/home/diogosteiner/\\xC1rea de Trabalho/nukenzie/src/pages/Dashboard/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { Header } from \"../../components/Header\";\nimport { Form } from \"../../components/Form\";\nimport { List } from \"../../components/List\";\nimport { useState } from \"react\";\nimport { Global } from \"../../Models/Global/Global\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Dashboard = () => {\n  _s();\n\n  const [listTransactions, setListTransactions] = useState([]);\n  const [listTransactionsFilter, setListTransactionsFilter] = useState([]);\n  const [isFilter, setIsfilter] = useState(false);\n\n  const addTransactions = transaction => {\n    const arrTransactions = Global.handleIds([...listTransactions, transaction]);\n    setIsfilter(false);\n    setListTransactions(arrTransactions);\n  };\n\n  const rmvTransaction = idTransaction => {\n    const newListTransactions = listTransactions.filter(_ref => {\n      let {\n        id\n      } = _ref;\n      return id != idTransaction;\n    });\n    setIsfilter(false);\n    setListTransactions(newListTransactions);\n  };\n\n  const transactionsFiltered = idBtn => {\n    if (idBtn != \"all\") {\n      if (idBtn == \"input\") {\n        idBtn = \"Entrada\";\n      } else if (idBtn == \"output\") {\n        idBtn = \"Saída\";\n      }\n\n      setIsfilter(true);\n      const listFiltered = listTransactions.filter(_ref2 => {\n        let {\n          type\n        } = _ref2;\n        return type == idBtn;\n      });\n      setListTransactionsFilter(listFiltered);\n    } else {\n      setIsfilter(false);\n      setListTransactions(arrList => {\n        return arrList;\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container main__container\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        addTransactions: addTransactions,\n        arrList: isFilter ? listTransactionsFilter : listTransactions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        arrList: isFilter ? listTransactionsFilter : listTransactions,\n        transactionsFiltered: transactionsFiltered,\n        rmvTransaction: rmvTransaction,\n        isFilter: isFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Dashboard, \"jH+SGHnmKLsxxhfnos0J5K5RBV8=\");\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["Header","Form","List","useState","Global","Dashboard","listTransactions","setListTransactions","listTransactionsFilter","setListTransactionsFilter","isFilter","setIsfilter","addTransactions","transaction","arrTransactions","handleIds","rmvTransaction","idTransaction","newListTransactions","filter","id","transactionsFiltered","idBtn","listFiltered","type","arrList"],"sources":["/home/diogosteiner/Área de Trabalho/nukenzie/src/pages/Dashboard/index.jsx"],"sourcesContent":["import { Header } from \"../../components/Header\";\nimport { Form } from \"../../components/Form\";\nimport { List } from \"../../components/List\";\nimport { useState } from \"react\";\nimport { Global } from \"../../Models/Global/Global\";\n\nexport const Dashboard = () => {\n  const [listTransactions, setListTransactions] = useState([]);\n  const [listTransactionsFilter, setListTransactionsFilter] = useState([]);\n  const [isFilter, setIsfilter] = useState(false);\n\n  const addTransactions = (transaction) => {\n    const arrTransactions = Global.handleIds([\n      ...listTransactions,\n      transaction,\n    ]);\n    setIsfilter(false);\n    setListTransactions(arrTransactions);\n  };\n\n  const rmvTransaction = (idTransaction) => {\n    const newListTransactions = listTransactions.filter(\n      ({ id }) => id != idTransaction\n    );\n    setIsfilter(false);\n    setListTransactions(newListTransactions);\n  };\n\n  const transactionsFiltered = (idBtn) => {\n    if (idBtn != \"all\") {\n      if (idBtn == \"input\") {\n        idBtn = \"Entrada\";\n      } else if (idBtn == \"output\") {\n        idBtn = \"Saída\";\n      }\n      setIsfilter(true);\n      const listFiltered = listTransactions.filter(({ type }) => type == idBtn);\n      setListTransactionsFilter(listFiltered);\n    } else {\n      setIsfilter(false);\n      setListTransactions((arrList) => {\n        return arrList;\n      });\n    }\n  };\n\n  return (\n    <>\n      <Header />\n      <main className=\"container main__container\">\n        <Form\n          addTransactions={addTransactions}\n          arrList={isFilter ? listTransactionsFilter : listTransactions}\n        />\n        <List\n          arrList={isFilter ? listTransactionsFilter : listTransactions}\n          transactionsFiltered={transactionsFiltered}\n          rmvTransaction={rmvTransaction}\n          isFilter={isFilter}\n        />\n      </main>\n    </>\n  );\n};\n"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,yBAAvB;AACA,SAASC,IAAT,QAAqB,uBAArB;AACA,SAASC,IAAT,QAAqB,uBAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,4BAAvB;;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;EAAA;;EAC7B,MAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CJ,QAAQ,CAAC,EAAD,CAAxD;EACA,MAAM,CAACK,sBAAD,EAAyBC,yBAAzB,IAAsDN,QAAQ,CAAC,EAAD,CAApE;EACA,MAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,KAAD,CAAxC;;EAEA,MAAMS,eAAe,GAAIC,WAAD,IAAiB;IACvC,MAAMC,eAAe,GAAGV,MAAM,CAACW,SAAP,CAAiB,CACvC,GAAGT,gBADoC,EAEvCO,WAFuC,CAAjB,CAAxB;IAIAF,WAAW,CAAC,KAAD,CAAX;IACAJ,mBAAmB,CAACO,eAAD,CAAnB;EACD,CAPD;;EASA,MAAME,cAAc,GAAIC,aAAD,IAAmB;IACxC,MAAMC,mBAAmB,GAAGZ,gBAAgB,CAACa,MAAjB,CAC1B;MAAA,IAAC;QAAEC;MAAF,CAAD;MAAA,OAAYA,EAAE,IAAIH,aAAlB;IAAA,CAD0B,CAA5B;IAGAN,WAAW,CAAC,KAAD,CAAX;IACAJ,mBAAmB,CAACW,mBAAD,CAAnB;EACD,CAND;;EAQA,MAAMG,oBAAoB,GAAIC,KAAD,IAAW;IACtC,IAAIA,KAAK,IAAI,KAAb,EAAoB;MAClB,IAAIA,KAAK,IAAI,OAAb,EAAsB;QACpBA,KAAK,GAAG,SAAR;MACD,CAFD,MAEO,IAAIA,KAAK,IAAI,QAAb,EAAuB;QAC5BA,KAAK,GAAG,OAAR;MACD;;MACDX,WAAW,CAAC,IAAD,CAAX;MACA,MAAMY,YAAY,GAAGjB,gBAAgB,CAACa,MAAjB,CAAwB;QAAA,IAAC;UAAEK;QAAF,CAAD;QAAA,OAAcA,IAAI,IAAIF,KAAtB;MAAA,CAAxB,CAArB;MACAb,yBAAyB,CAACc,YAAD,CAAzB;IACD,CATD,MASO;MACLZ,WAAW,CAAC,KAAD,CAAX;MACAJ,mBAAmB,CAAEkB,OAAD,IAAa;QAC/B,OAAOA,OAAP;MACD,CAFkB,CAAnB;IAGD;EACF,CAhBD;;EAkBA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAM,SAAS,EAAC,2BAAhB;MAAA,wBACE,QAAC,IAAD;QACE,eAAe,EAAEb,eADnB;QAEE,OAAO,EAAEF,QAAQ,GAAGF,sBAAH,GAA4BF;MAF/C;QAAA;QAAA;QAAA;MAAA,QADF,eAKE,QAAC,IAAD;QACE,OAAO,EAAEI,QAAQ,GAAGF,sBAAH,GAA4BF,gBAD/C;QAEE,oBAAoB,EAAEe,oBAFxB;QAGE,cAAc,EAAEL,cAHlB;QAIE,QAAQ,EAAEN;MAJZ;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAiBD,CAzDM;;GAAML,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}